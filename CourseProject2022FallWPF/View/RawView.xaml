<Page x:Class="CourseProject2022FallWPF.View.RawView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:local="clr-namespace:CourseProject2022FallWPF.ViewModel"
      mc:Ignorable="d" 
      d:DesignHeight="550" d:DesignWidth="1000" d:Background="white"
      Title="RawView">
    <Page.DataContext>
        <local:RawViewViewModel/>
    </Page.DataContext>
    <Grid>
        <Grid Margin="20,20,20,20"  HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="100" Height="100" Panel.ZIndex="1000" Visibility="Visible">
            <Button Style="{DynamicResource MaterialDesignFloatingActionLightButton}" Command="{Binding Add}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel = 3,AncestorType = TabControl}, Path=TabControl.SelectedItem}">
                <Canvas Height="30"  Width="30">
                    <Path Stroke="#FFFFFF" StrokeThickness="2">
                        <Path.Data>
                            <PathGeometry>
                                <PathGeometry.Figures>
                                    <PathFigure StartPoint="6,14">
                                        <LineSegment Point="22,14"/>
                                    </PathFigure>
                                    <PathFigure StartPoint="14,6">
                                        <LineSegment Point="14,22"/>
                                    </PathFigure>
                                </PathGeometry.Figures>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
            </Button>
        </Grid>
        <TabControl SelectedIndex="{Binding SelectedTab}">
            <TabItem Header="Income">
                <DataGrid CanUserAddRows="False" IsReadOnly="True" CanUserDeleteRows="False" AutoGenerateColumns="False" ItemsSource="{Binding IncomeTable}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding ID}" Header="ID"/>
                        <DataGridTextColumn Binding="{Binding Operation.Value}" Header="Operation Value" />
                        <DataGridTextColumn Binding="{Binding Operation.Currency.Name}" Header="Currency Name" />
                        <DataGridTextColumn Binding="{Binding Operation.Currency.Ratio}" Header="Currency Ratio" />
                        <DataGridTextColumn Binding="{Binding Operation.Target.Name}" Header="Target Name" />
                        <DataGridTextColumn Binding="{Binding Operation.User.Name}" Header="User Name" />
                        <DataGridTextColumn Binding="{Binding Operation.Comment}" Header="Operation Comment" />
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add" Command="{Binding Add}"/>
                            <MenuItem Header="Edit" Command="{Binding Edit}"/>
                            <MenuItem Header="Remove" Command="{Binding Remove}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </TabItem>
            <TabItem Header="Expense"></TabItem>
            <TabItem Header="Operation"></TabItem>
            <TabItem Header="Currency">
                <DataGrid CanUserAddRows="False" IsReadOnly="True" CanUserDeleteRows="False" AutoGenerateColumns="False" ItemsSource="{Binding CurrencyTable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding ID}" Header="ID"/>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Name"/>
                        <DataGridTextColumn Binding="{Binding Ratio}" Header="Ratio" Width="*"/>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add" Command="{Binding Add}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                            <MenuItem Header="Edit" Command="{Binding Edit}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                            <MenuItem Header="Remove" Command="{Binding Remove}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </TabItem>
            <TabItem Header="Target">
                <DataGrid CanUserAddRows="False" IsReadOnly="True" CanUserDeleteRows="False" AutoGenerateColumns="False" ItemsSource="{Binding TargetTable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding ID}" Header="ID"/>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Name" Width="*"/>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add" Command="{Binding Add}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                            <MenuItem Header="Edit" Command="{Binding Edit}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                            <MenuItem Header="Remove" Command="{Binding Remove}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </TabItem>
            <TabItem Header="User">
                <DataGrid CanUserAddRows="False" IsReadOnly="True" CanUserDeleteRows="False" AutoGenerateColumns="False" ItemsSource="{Binding UserTable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding ID}" Header="ID"/>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Name" Width="*"/>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add" Command="{Binding Add}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                            <MenuItem Header="Edit" Command="{Binding Edit}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                            <MenuItem Header="Remove" Command="{Binding Remove}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </TabItem>
        </TabControl>
    </Grid>
</Page>
